/// <reference types="react" />
import { ButtonPropsInterface } from './interface';
export declare const buttonVariant: ({ variant }: any) => import("styled-components").RuleSet<object>;
export declare const ButtonStyle: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").FastOmit<import("styled-components/dist/types").Substitute<import("styled-components/dist/types").Substitute<import("styled-components/dist/types").FastOmit<import("styled-components/dist/types").Substitute<import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
    ref?: import("react").Ref<HTMLDivElement>;
}>, Pick<import("../../containers/Box/interface").BoxPropsInterface, "as">>, keyof import("../../containers/Box/interface").BoxPropsInterface> & import("../../containers/Box/interface").BoxPropsInterface, import("styled-components/dist/types").FastOmit<import("styled-components/dist/types").Substitute<import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
    ref?: import("react").Ref<HTMLDivElement>;
}>, Pick<import("../../containers/Box/interface").BoxPropsInterface, "as">>, keyof import("../../containers/Box/interface").BoxPropsInterface> & import("../../containers/Box/interface").BoxPropsInterface>, ButtonPropsInterface>, never>> & Omit<import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").Substitute<import("styled-components/dist/types").Substitute<import("styled-components/dist/types").Substitute<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
    ref?: import("react").Ref<HTMLDivElement>;
}>, Pick<import("../../containers/Box/interface").BoxPropsInterface, "as">>, import("../../containers/Box/interface").BoxPropsInterface>>, keyof import("react").Component<any, {}, any>>;
